cmake_minimum_required(VERSION 3.1)

project(myproject)

set(CMAKE_EXECUTABLE_PATH ${CMAKE_SOURCE_DIR}/bin)
set(CMAKE_LIBRARY_PATH ${CMAKE_SOURCE_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)

set(PROJECT_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include)
set(PROJECT_LINK_LIBRARIES "")

find_package(Boost)
if(Boost_FOUND)
   #set(PROJECT_INCLUDE_DIR ${PROJECT_INCLUDE_DIR} ${Boost_INCLUDE_DIRS})
   #set(PROJECT_LINK_LIBRARIES ${PROJECT_LINK_LIBRARIES} ${Boost_LIBRARIES})
   set(PROJECT_INCLUDE_DIR ${PROJECT_INCLUDE_DIR} "/usr/local/Cellar/boost/1.76.0/include")
   set(PROJECT_LINK_LIBRARIES ${PROJECT_LINK_LIBRARIES} "/usr/local/Cellar/boost/1.76.0/lib/libboost_program_options-mt.dylib")
endif()

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
if (Threads_FOUND)
   set(PROJECT_LINK_LIBRARIES ${PROJECT_LINK_LIBRARIES} Threads::Threads)
endif()

set(CURSES_NEED_NCURSES TRUE)
find_package(Curses)
if (Curses_FOUND)
   set(PROJECT_INCLUDE_DIR ${PROJECT_INCLUDE_DIR} ${CURSES_INCLUDE_DIRS})
   set(PROJECT_LINK_LIBRARIES ${PROJECT_LINK_LIBRARIES} ${CURSES_LIBRARIES})
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_XOPEN_SOURCE_EXTENDED")
endif()

find_package(Eigen3 3.4 REQUIRED NO_MODULE)
set(PROJECT_LINK_LIBRARIES ${PROJECT_LINK_LIBRARIES} Eigen3::Eigen)

set(CMAKE_VERBOSE_MAKEFILE OFF)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wextra -Wpedantic -Wall -O0 -g")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-parameter")

add_subdirectory("${PROJECT_SOURCE_DIR}/src")
